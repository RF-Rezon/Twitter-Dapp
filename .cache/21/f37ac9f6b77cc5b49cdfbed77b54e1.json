{"id":"node_modules/ethereum-cryptography/scrypt.js","dependencies":[{"name":"G:\\Twitter Dapp\\package.json","includedInParent":true,"mtime":1729344052353},{"name":"G:\\Twitter Dapp\\node_modules\\ethereum-cryptography\\package.json","includedInParent":true,"mtime":1729344034533},{"name":"@noble/hashes/scrypt","loc":{"line":5,"column":25,"index":160},"parent":"G:\\Twitter Dapp\\node_modules\\ethereum-cryptography\\scrypt.js","resolved":"G:\\Twitter Dapp\\node_modules\\@noble\\hashes\\scrypt.js"},{"name":"./utils.js","loc":{"line":6,"column":27,"index":212},"parent":"G:\\Twitter Dapp\\node_modules\\ethereum-cryptography\\scrypt.js","resolved":"G:\\Twitter Dapp\\node_modules\\ethereum-cryptography\\utils.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scrypt = scrypt;\nexports.scryptSync = scryptSync;\nconst scrypt_1 = require(\"@noble/hashes/scrypt\");\nconst utils_js_1 = require(\"./utils.js\");\nasync function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    (0, utils_js_1.assertBytes)(password);\n    (0, utils_js_1.assertBytes)(salt);\n    return (0, scrypt_1.scryptAsync)(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nfunction scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    (0, utils_js_1.assertBytes)(password);\n    (0, utils_js_1.assertBytes)(salt);\n    return (0, scrypt_1.scrypt)(password, salt, { N: n, r, p, dkLen, onProgress });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ethereum-cryptography/scrypt.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules/ethereum-cryptography/scrypt.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scrypt = scrypt;\nexports.scryptSync = scryptSync;\nconst scrypt_1 = require(\"@noble/hashes/scrypt\");\nconst utils_js_1 = require(\"./utils.js\");\nasync function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    (0, utils_js_1.assertBytes)(password);\n    (0, utils_js_1.assertBytes)(salt);\n    return (0, scrypt_1.scryptAsync)(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nfunction scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    (0, utils_js_1.assertBytes)(password);\n    (0, utils_js_1.assertBytes)(salt);\n    return (0, scrypt_1.scrypt)(password, salt, { N: n, r, p, dkLen, onProgress });\n}\n"},"lineCount":17}},"error":null,"hash":"bddfd9e7cbf8811a4f10ef0146971747","cacheData":{"env":{}}}