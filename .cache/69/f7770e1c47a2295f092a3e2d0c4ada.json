{"id":"node_modules/web3-rpc-methods/lib/esm/net_rpc_methods.js","dependencies":[{"name":"G:\\Twitter Dapp\\node_modules\\web3-rpc-methods\\lib\\esm\\net_rpc_methods.js.map","includedInParent":true,"mtime":1729344034826},{"name":"G:\\Twitter Dapp\\node_modules\\web3-rpc-methods\\src\\net_rpc_methods.ts","includedInParent":true,"mtime":1729344035174},{"name":"G:\\Twitter Dapp\\package.json","includedInParent":true,"mtime":1729344052353},{"name":"G:\\Twitter Dapp\\node_modules\\web3-rpc-methods\\lib\\esm\\package.json","includedInParent":true,"mtime":1729344034286}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getId = getId;\nexports.getPeerCount = getPeerCount;\nexports.isListening = isListening;\nvar __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nfunction getId(requestManager) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return requestManager.send({\n      method: 'net_version',\n      params: []\n    });\n  });\n}\nfunction getPeerCount(requestManager) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return requestManager.send({\n      method: 'net_peerCount',\n      params: []\n    });\n  });\n}\nfunction isListening(requestManager) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return requestManager.send({\n      method: 'net_listening',\n      params: []\n    });\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":36,"column":0}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":20,"column":22},"generated":{"line":36,"column":9}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":36,"column":14}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":20,"column":28},"generated":{"line":36,"column":15}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":20,"column":74},"generated":{"line":36,"column":29}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":20,"column":74},"generated":{"line":36,"column":31}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":21,"column":1},"generated":{"line":38,"column":4}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":21,"column":8},"generated":{"line":38,"column":11}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":21,"column":22},"generated":{"line":38,"column":25}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":38,"column":26}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":38,"column":30}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":21,"column":28},"generated":{"line":38,"column":31}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":39,"column":6}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":22,"column":8},"generated":{"line":39,"column":12}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":22,"column":10},"generated":{"line":39,"column":14}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":22,"column":23},"generated":{"line":39,"column":27}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":40,"column":6}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":23,"column":8},"generated":{"line":40,"column":12}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":23,"column":10},"generated":{"line":40,"column":14}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":41,"column":5}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":24,"column":3},"generated":{"line":41,"column":6}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":42,"column":2}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":42,"column":3}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":42,"column":4}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":44,"column":0}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":27,"column":22},"generated":{"line":44,"column":9}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":27,"column":34},"generated":{"line":44,"column":21}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":27,"column":35},"generated":{"line":44,"column":22}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":27,"column":81},"generated":{"line":44,"column":36}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":27,"column":81},"generated":{"line":44,"column":38}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":28,"column":1},"generated":{"line":46,"column":4}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":46,"column":11}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":46,"column":25}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":28,"column":23},"generated":{"line":46,"column":26}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":28,"column":27},"generated":{"line":46,"column":30}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":28,"column":28},"generated":{"line":46,"column":31}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":47,"column":6}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":47,"column":12}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":47,"column":14}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":47,"column":29}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":48,"column":6}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":48,"column":12}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":48,"column":14}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":49,"column":5}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":31,"column":3},"generated":{"line":49,"column":6}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":50,"column":2}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":50,"column":3}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":50,"column":4}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":34,"column":6},"generated":{"line":52,"column":0}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":34,"column":22},"generated":{"line":52,"column":9}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":34,"column":33},"generated":{"line":52,"column":20}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":34,"column":34},"generated":{"line":52,"column":21}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":34,"column":80},"generated":{"line":52,"column":35}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":34,"column":80},"generated":{"line":52,"column":37}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":54,"column":4}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":54,"column":11}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":54,"column":25}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":35,"column":23},"generated":{"line":54,"column":26}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":35,"column":27},"generated":{"line":54,"column":30}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":35,"column":28},"generated":{"line":54,"column":31}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":55,"column":6}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":55,"column":12}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":55,"column":14}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":36,"column":25},"generated":{"line":55,"column":29}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":56,"column":6}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":37,"column":8},"generated":{"line":56,"column":12}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":56,"column":14}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":57,"column":5}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":38,"column":3},"generated":{"line":57,"column":6}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":58,"column":2}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":39,"column":1},"generated":{"line":58,"column":3}},{"source":"../../src/net_rpc_methods.ts","name":null,"original":{"line":39,"column":1},"generated":{"line":58,"column":4}}],"sources":{"../../src/net_rpc_methods.ts":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3RequestManager } from 'web3-core';\nimport { Web3NetAPI } from 'web3-types';\n\nexport async function getId(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_version',\n\t\tparams: [],\n\t});\n}\n\nexport async function getPeerCount(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_peerCount',\n\t\tparams: [],\n\t});\n}\n\nexport async function isListening(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_listening',\n\t\tparams: [],\n\t});\n}\n"},"lineCount":null}},"error":null,"hash":"471879601812323e78e7ac8e86b99b17","cacheData":{"env":{}}}