{"id":"node_modules/web3-eth-accounts/lib/esm/common/types.js","dependencies":[{"name":"G:\\Twitter Dapp\\node_modules\\web3-eth-accounts\\lib\\esm\\common\\types.js.map","includedInParent":true,"mtime":1729344049682},{"name":"G:\\Twitter Dapp\\node_modules\\web3-eth-accounts\\src\\common\\types.ts","includedInParent":true,"mtime":1729344051946},{"name":"G:\\Twitter Dapp\\package.json","includedInParent":true,"mtime":1729344052353},{"name":"G:\\Twitter Dapp\\node_modules\\web3-eth-accounts\\lib\\esm\\package.json","includedInParent":true,"mtime":1729344039629}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypeOutput = void 0;\n/**\n * Type output options\n */\nvar TypeOutput;\n(function (TypeOutput) {\n  TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n  TypeOutput[TypeOutput[\"BigInt\"] = 1] = \"BigInt\";\n  TypeOutput[TypeOutput[\"Uint8Array\"] = 2] = \"Uint8Array\";\n  TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput || (exports.TypeOutput = TypeOutput = {}));"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/common/types.ts","name":null,"original":{"line":166,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":12},"generated":{"line":10,"column":4}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":174,"column":1},"generated":{"line":10,"column":14}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":0},"generated":{"line":11,"column":1}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":12},"generated":{"line":11,"column":11}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":11,"column":21}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":11,"column":23}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":2}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":12}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":13}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":23}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":24}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":32}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":33}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":36}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":37}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":38}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":1},"generated":{"line":12,"column":41}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":170,"column":7},"generated":{"line":12,"column":49}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":2}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":12}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":13}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":23}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":24}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":32}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":33}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":36}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":37}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":38}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":1},"generated":{"line":13,"column":41}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":171,"column":7},"generated":{"line":13,"column":49}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":2}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":12}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":13}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":23}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":24}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":36}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":37}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":40}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":41}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":42}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":1},"generated":{"line":14,"column":45}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":172,"column":11},"generated":{"line":14,"column":57}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":2}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":12}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":13}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":23}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":24}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":43}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":44}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":47}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":48}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":49}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":15,"column":52}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":173,"column":18},"generated":{"line":15,"column":71}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":174,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":174,"column":1},"generated":{"line":16,"column":1}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":12},"generated":{"line":16,"column":3}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":13}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":18}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":25}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":26}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":36}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":12},"generated":{"line":16,"column":39}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":49}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":52}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":53}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":54}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":55}},{"source":"../../../src/common/types.ts","name":null,"original":{"line":169,"column":22},"generated":{"line":16,"column":56}}],"sources":{"../../../src/common/types.ts":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport type { Chain, ConsensusAlgorithm, ConsensusType, Hardfork } from './enums.js';\n\nexport interface ChainName {\n\t[chainId: string]: string;\n}\n\nexport type CliqueConfig = {\n\tperiod: number;\n\tepoch: number;\n};\n\nexport type EthashConfig = Record<string, unknown>;\n\nexport type CasperConfig = Record<string, unknown>;\n\nexport interface GenesisBlockConfig {\n\ttimestamp?: string;\n\tgasLimit: number;\n\tdifficulty: number;\n\tnonce: string;\n\textraData: string;\n\tbaseFeePerGas?: string;\n}\n\nexport interface HardforkConfig {\n\tname: Hardfork | string;\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tblock: number | null; // null is used for hardforks that should not be applied -- since `undefined` isn't a valid value in JSON\n\tttd?: bigint | string;\n\ttimestamp?: number | string;\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tforkHash?: string | null;\n}\n\nexport interface BootstrapNodeConfig {\n\tip: string;\n\tport: number | string;\n\tnetwork?: string;\n\tchainId?: number;\n\tid: string;\n\tlocation: string;\n\tcomment: string;\n}\n\nexport interface ChainConfig {\n\tname: string;\n\tchainId: number | bigint;\n\tnetworkId: number | bigint;\n\tdefaultHardfork?: string;\n\tcomment?: string;\n\turl?: string;\n\tgenesis: GenesisBlockConfig;\n\thardforks: HardforkConfig[];\n\tbootstrapNodes?: BootstrapNodeConfig[];\n\tdnsNetworks?: string[];\n\tconsensus: {\n\t\ttype: ConsensusType | string;\n\t\talgorithm: ConsensusAlgorithm | string;\n\t\tclique?: CliqueConfig;\n\t\tethash?: EthashConfig;\n\t\tcasper?: CasperConfig;\n\t};\n}\nexport interface ChainsConfig {\n\t[key: string]: ChainConfig | ChainName;\n}\n\ninterface BaseOpts {\n\t/**\n\t * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n\t *\n\t * Default: Hardfork.London\n\t */\n\thardfork?: string | Hardfork;\n\t/**\n\t * Selected EIPs which can be activated, please use an array for instantiation\n\t * (e.g. `eips: [ 2537, ]`)\n\t *\n\t * Currently supported:\n\t *\n\t * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n\t */\n\teips?: number[];\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n\t/**\n\t * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n\t * either from a chain directly supported or a custom chain\n\t * passed in via {@link CommonOpts.customChains}.\n\t */\n\tchain: string | number | Chain | bigint | object;\n\t/**\n\t * Initialize (in addition to the supported chains) with the selected\n\t * custom chains. Custom genesis state should be passed to the Blockchain class if used.\n\t *\n\t * Usage (directly with the respective chain initialization via the {@link CommonOpts.chain} option):\n\t *\n\t * ```javascript\n\t * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n\t * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n\t * ```\n\t */\n\tcustomChains?: ChainConfig[];\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n\t/**\n\t * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n\t * a standard chain used to base the custom chain params on.\n\t */\n\tbaseChain?: string | number | Chain | bigint;\n}\n\nexport interface GethConfigOpts extends BaseOpts {\n\tchain?: string;\n\tgenesisHash?: Uint8Array;\n\tmergeForkIdPostMerge?: boolean;\n}\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string;\n\n/*\n * A type that represents an input that can be converted to a Buffer.\n */\nexport type Uint8ArrayLike = Uint8Array | number[] | number | bigint | PrefixedHexString;\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Uint8Array;\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n\ttoArray(): Uint8Array;\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>;\n/**\n * Type output options\n */\nexport enum TypeOutput {\n\tNumber,\n\tBigInt,\n\tUint8Array,\n\tPrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n\t[TypeOutput.Number]: number;\n\t[TypeOutput.BigInt]: bigint;\n\t[TypeOutput.Uint8Array]: Uint8Array;\n\t[TypeOutput.PrefixedHexString]: PrefixedHexString;\n};\nexport type ToBytesInputTypes =\n\t| PrefixedHexString\n\t| number\n\t| bigint\n\t| Uint8Array\n\t| number[]\n\t| TransformableToArray\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t| null\n\t| undefined;\n"},"lineCount":null}},"error":null,"hash":"ce0fb92ed78ee4c8f84d4c18575f9b4f","cacheData":{"env":{}}}